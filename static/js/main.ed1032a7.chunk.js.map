{"version":3,"sources":["components/Section.js","components/ContactListItem.js","components/ContactList.js","components/ContactForm.js","components/Filter.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["Section","title","children","ContactList","id","name","number","onDeleteContact","className","type","onClick","list","map","ContactForm","onSubmit","useState","setName","setNumber","handleChange","e","target","value","nameId","uuidv4","telId","preventDefault","htmlFor","pattern","required","onChange","Component","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","contacts","setContacts","filter","setFilter","changeContacts","item","changeFilter","useCallback","filteredContacts","useMemo","normalizedFilter","toLowerCase","contact","includes","normalizedName","find","el","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed1032a7.chunk.js","sourcesContent":["export default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n","export default function ContactList({ id, name, number, onDeleteContact }) {\r\n  return (\r\n    <li className=\"listItem\">\r\n      <span>{name}:</span>\r\n      <span>{number}</span>\r\n      <button\r\n        className=\"btn\"\r\n        type=\"button\"\r\n        id={id}\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import ContactListItem from './ContactListItem';\r\n\r\nexport default function ContactList({ list, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {list.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit({ name, number, id: uuidv4() });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const nameId = uuidv4();\r\n  const telId = uuidv4();\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <label className=\"label\" htmlFor={nameId}>\r\n        Name\r\n      </label>\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={name}\r\n        id={nameId}\r\n        onChange={handleChange}\r\n      />\r\n      <label className=\"label\" htmlFor={telId}>\r\n        Number\r\n      </label>\r\n      <input\r\n        className=\"input\"\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        value={number}\r\n        id={telId}\r\n        onChange={handleChange}\r\n      />\r\n      <button className=\"btn\" type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  state: PropTypes.objectOf(PropTypes.string),\r\n};\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function Component({ value, onChange }) {\r\n  return (\r\n    <div>\r\n      <label className=\"label\" htmlFor={uuidv4()}>\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        value={value}\r\n        id={uuidv4()}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\r\nimport { useState, useCallback, useMemo } from 'react';\r\nimport Section from './components/Section';\r\nimport ContactList from './components/ContactList';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport useLocalStorage from './hooks/useLocalStorage';\r\n\r\nexport default function App() {\r\n  let arr = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: 4591256 },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ];\r\n  const [contacts, setContacts] = useLocalStorage('contacts', arr);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const formSubmitHandler = item => {\r\n    const normalizedName = item.name.toLowerCase();\r\n    contacts.find(el => {\r\n      return el.name.toLowerCase() === normalizedName;\r\n    })\r\n      ? alert(`${item.name} is already in contacts`)\r\n      : changeContacts(item);\r\n  };\r\n\r\n  const changeContacts = item => {\r\n    setContacts([...contacts, item]);\r\n  };\r\n\r\n  const changeFilter = useCallback(e => {\r\n    setFilter(e.target.value);\r\n  }, []);\r\n\r\n  const filteredContacts = useMemo(() => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  }, [filter, contacts]);\r\n\r\n  return (\r\n    <div>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm onSubmit={formSubmitHandler} />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <Filter value={filter} onChange={changeFilter} />\r\n        <ContactList\r\n          list={filteredContacts}\r\n          onDeleteContact={id => {\r\n            setContacts(contacts.filter(el => el.id !== id));\r\n          }}\r\n        />\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(\r\n    () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue,\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}